slick {

  # MySQL Replication 을 적용하기 위해서 MySQL Connector는 Replication을 지원하지만, MariaDB Client 는 지원하지 않는다.
  # MariaDB client 를 이용하여 master-slaves 를 처리하기 위해서는 아래와 같이 master와 slaves 를 각각 정의한 후
  # SlickContext 에서 round-robin 방식으로 connection을 제공하도록 합니다.

  database {
    host = "127.0.0.1:3306"
    name = "slick"

    driverClass = "org.mariadb.jdbc.Driver"
    url = "jdbc:mariadb://"${slick.database.host}"/"${slick.database.name}
    username = "root"
    password = "root"

    maxPoolSize = 64
  }

  # Master DB 하나만 쓰는 경우에는 굳이 masters 에 또 정의할 필요는 없습니다.
  # 테스트를 위해 복수의 커넥션을 만듭니다.
  masters = [
    {
      driverClass = ${slick.database.driverClass}
      url = "jdbc:mariadb://127.0.0.1:3306/"${slick.database.name}
      username = ${slick.database.username}
      password = ${slick.database.password}

      maxPoolSize = 64
    }
  ]

  # 복수의 slave 에 대해 대응하기 위해 작업합니다.
  slaves = [
    {
      driverClass = ${slick.database.driverClass}
      url = "jdbc:mariadb://127.0.0.1:3306/"${slick.database.name}
      username = ${slick.database.username}
      password = ${slick.database.password}

      maxPoolSize = 64
    }
    {
      driverClass = ${slick.database.driverClass}
      url = "jdbc:mariadb://127.0.0.1:3306/"${slick.database.name}
      username = ${slick.database.username}
      password = ${slick.database.password}

      maxPoolSize = 64
    }
    {
      driverClass = ${slick.database.driverClass}
      url = "jdbc:mariadb://127.0.0.1:3306/"${slick.database.name}
      username = ${slick.database.username}
      password = ${slick.database.password}

      maxPoolSize = 64
    }
  ]
}
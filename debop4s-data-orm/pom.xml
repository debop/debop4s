<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>debop4s</groupId>
    <artifactId>debop4s-data-orm</artifactId>
    <version>0.4.0-SNAPSHOT</version>

    <properties>
        <jdk.version>1.7</jdk.version>
        <scala.version>2.11.6</scala.version>
        <scala.binary.version>2.11</scala.binary.version>

        <debop4s.version>0.4.0-SNAPSHOT</debop4s.version>

        <springframework.version>4.1.6.RELEASE</springframework.version>
        <hibernate.version>4.3.9.Final</hibernate.version>
        <querydsl.version>3.6.3</querydsl.version>
        <slf4j.version>1.7.12</slf4j.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>

    <dependencies>
        <dependency>
            <groupId>debop4s</groupId>
            <artifactId>debop4s-config_${scala.binary.version}</artifactId>
            <version>${debop4s.version}</version>
        </dependency>
        <dependency>
            <groupId>debop4s</groupId>
            <artifactId>debop4s-core_${scala.binary.version}</artifactId>
            <version>${debop4s.version}</version>
        </dependency>
        <dependency>
            <groupId>debop4s</groupId>
            <artifactId>debop4s-timeperiod_${scala.binary.version}</artifactId>
            <version>${debop4s.version}</version>
        </dependency>
        <dependency>
            <groupId>debop4s</groupId>
            <artifactId>debop4s-rediscala_${scala.binary.version}</artifactId>
            <version>${debop4s.version}</version>
        </dependency>
        <dependency>
            <groupId>debop4s</groupId>
            <artifactId>hibernate-rediscala_${scala.binary.version}</artifactId>
            <version>${debop4s.version}</version>
        </dependency>
        <dependency>
            <groupId>debop4s</groupId>
            <artifactId>debop4s-data-common_${scala.binary.version}</artifactId>
            <version>${debop4s.version}</version>
        </dependency>

        <!-- scala -->
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <!-- generic 최적화 -->
        <dependency>
            <groupId>org.scala-miniboxing.plugins</groupId>
            <artifactId>miniboxing-runtime_2.11</artifactId>
            <version>0.4-M2</version>
        </dependency>

        <!-- project lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.16.4</version>
            <scope>provided</scope>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.1.3</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>${slf4j.version}</version>
        </dependency>

        <!-- Guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>18.0</version>
        </dependency>

        <!-- Spring Framework -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>${springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aspects</artifactId>
            <version>${springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-tx</artifactId>
            <version>${springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-orm</artifactId>
            <version>${springframework.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${springframework.version}</version>
            <scope>test</scope>
        </dependency>

        <!-- Spring Data -->
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-jpa</artifactId>
            <version>1.8.0.RELEASE</version>
        </dependency>

        <!-- Hibernate -->
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-core</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-entitymanager</artifactId>
            <version>${hibernate.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jboss.logging</groupId>
            <artifactId>jboss-logging</artifactId>
            <version>3.1.4.GA</version>
        </dependency>

        <!-- Query DSL -->
        <dependency>
            <groupId>com.mysema.querydsl</groupId>
            <artifactId>querydsl-apt</artifactId>
            <version>${querydsl.version}</version>
        </dependency>
        <dependency>
            <groupId>com.mysema.querydsl</groupId>
            <artifactId>querydsl-jpa</artifactId>
            <version>${querydsl.version}</version>
        </dependency>

        <!-- Database Drivers -->
        <dependency>
            <groupId>org.hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>2.3.2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>1.4.179</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.31</version>
            <scope>test</scope>
        </dependency>
        <!-- Slick 사용 시에는 MariaDB에 대해서는 mariadb-java-client 를 써야합니다. mysql-connector-java 는 버그 있습니다. -->
        <dependency>
            <groupId>org.mariadb.jdbc</groupId>
            <artifactId>mariadb-java-client</artifactId>
            <version>1.1.7</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>9.4-1201-jdbc41</version>
            <scope>test</scope>
        </dependency>

        <!-- Test -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.11</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.easytesting</groupId>
            <artifactId>fest-assert</artifactId>
            <version>1.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>1.9.5</version>
            <scope>test</scope>
        </dependency>

        <!-- ScalaTest -->
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.binary.version}</artifactId>
            <version>2.2.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.storm-enroute</groupId>
            <artifactId>scalameter_${scala.binary.version}</artifactId>
            <version>0.6</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <repositories>
        <repository>
            <id>sonatype</id>
            <name>Sonatype OSS</name>
            <url>https://oss.sonatype.org/content/groups/public</url>
        </repository>
        <repository>
            <id>maven2-repository.dev.java.net</id>
            <name>Java.net Repository for Maven</name>
            <url>http://download.java.net/maven/2/</url>
        </repository>
        <repository>
            <id>typesafe</id>
            <name>Typesafe Repository</name>
            <url>http://repo.typesafe.com/typesafe/releases/</url>
        </repository>
        <repository>
            <id>rediscala</id>
            <name>RedisScala</name>
            <url>http://dl.bintray.com/etaty/maven</url>
        </repository>
    </repositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-idea-plugin</artifactId>
                <version>2.2</version>
                <configuration>
                    <downloadSources>true</downloadSources>
                    <downloadJavadocs>true</downloadJavadocs>
                    <dependenciesAsLibraries>true</dependenciesAsLibraries>
                    <useFullNames>false</useFullNames>
                </configuration>
            </plugin>
            <!--
                scala-maven-plugin 을 maven-compiler-plugin 보다 앞에 정의해야 한다.
                참고: http://davidb.github.io/scala-maven-plugin/example_java.html
            -->
            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>3.1.6</version>
                <configuration>
                    <scalaVersion>${scala.version}</scalaVersion>
                    <analysisCacheFile>${project.build.outputDirectory}/analysis-cache-file</analysisCacheFile>
                    <testAnalysisCacheFile>${project.build.testOutputDirectory}/test-analysis-cache-file
                    </testAnalysisCacheFile>
                    <encoding>${project.build.sourceEncoding}</encoding>
                    <args>
                        <!-- NOTE: akka 사용 시에는 적용하면 안됩니다!!! -->
                        <!--<arg>-optimise</arg>-->
                        <arg>-Xlint</arg>
                        <arg>-Yconst-opt</arg>
                        <arg>-Ydead-code</arg>
                        <arg>-Yclosure-elim</arg>
                        <arg>-Yinline</arg>
                        <arg>-target:jvm-${jdk.version}</arg>
                        <arg>-unchecked</arg>
                        <arg>-deprecation</arg>
                        <arg>-explaintypes</arg>
                        <arg>-Dfile.encoding=UTF-8</arg>
                        <arg>-nowarn</arg>
                    </args>
                    <javacArgs>
                        <javacArg>-source</javacArg>
                        <javacArg>${jdk.version}</javacArg>
                        <javacArg>-target</javacArg>
                        <javacArg>${jdk.version}</javacArg>
                        <javacArg>-Dfile.encoding=UTF-8</javacArg>
                    </javacArgs>
                    <jvmArgs>
                        <jvmArg>-Xms128M</jvmArg>
                        <jvmArg>-Xmx1G</jvmArg>
                        <jvmArg>-XX:+UseCompressedOops</jvmArg>
                        <jvmArg>-XX:+UseParallelOldGC</jvmArg>
                        <jvmArg>-Dfile.encoding=UTF-8</jvmArg>
                    </jvmArgs>

                    <compilerPlugins>
                        <!--
                            NOTE: hconnect-data-slick 의 SlickSchema 에서 예외가 발생하여 제거함.
                            NOTE: 플러그인을 정의하면 컴파일 시 @miniboxed를 자동으로 붙여주는데, 원치않는 곳에 붇을 수 있어 수동작업을 추천한다.
                        -->
                        <!--<compilerPlugin>-->
                        <!--<groupId>org.scala-miniboxing.plugins</groupId>-->
                        <!--<artifactId>miniboxing-plugin_2.11</artifactId>-->
                        <!--<version>0.4-SNAPSHOT</version>-->
                        <!--</compilerPlugin>-->
                    </compilerPlugins>

                </configuration>
                <executions>
                    <execution>
                        <id>scala-compile-first</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>add-source</goal>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>scala-test-compile</id>
                        <phase>process-test-resources</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <executions>
                    <execution>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <compilerVersion>${jdk.version}</compilerVersion>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                    <encoding>${project.build.sourceEncoding}</encoding>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- scalatest 를 사용하도록 하고, surefire는 사용하지 않도록 합니다. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.17</version>
                <configuration>
                    <skipTests>true</skipTests>
                    <argLine>-Xmx8G</argLine>
                    <argLine>-XX:+UseCompressedOops</argLine>
                    <argLine>-XX:+UseParallelOldGC</argLine>
                    <argLine>-Dfile.encoding=UTF-8</argLine>
                </configuration>
            </plugin>

            <!-- enable scalatest -->
            <plugin>
                <groupId>org.scalatest</groupId>
                <artifactId>scalatest-maven-plugin</artifactId>
                <version>1.0-RC2</version>
                <!--<configuration>-->
                <!--<reportsDirectory>${project.build.directory}/surefire-reports</reportsDirectory>-->
                <!--<junitxml>.</junitxml>-->
                <!--<filereports>WDF TestSuite.txt</filereports>-->
                <!--</configuration>-->
                <configuration>
                    <argLine>-ea</argLine>
                    <argLine>-server</argLine>
                    <argLine>-Xmx8G</argLine>
                    <argLine>-XX:+UseCompressedOops</argLine>
                    <argLine>-XX:+UseParallelOldGC</argLine>
                    <argLine>-Dfile.encoding=UTF-8</argLine>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>test</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>com.mysema.maven</groupId>
                <artifactId>apt-maven-plugin</artifactId>
                <version>1.1.2</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>process</goal>
                            <goal>test-process</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>target/generated-sources/java</outputDirectory>
                            <testOutputDirectory>target/generated-test-sources/java</testOutputDirectory>
                            <processor>com.mysema.query.apt.jpa.JPAAnnotationProcessor</processor>
                            <options>
                                <!-- association 을 lazy 로 설정하기 위해서는 entityAccessors = true 로 합니다. -->
                                <querydsl.entityAccessors>false</querydsl.entityAccessors>
                            </options>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>
</project>